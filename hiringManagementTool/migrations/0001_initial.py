# Generated by Django 4.2.11 on 2025-02-09 12:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClientManagerMaster',
            fields=[
                ('cmm_id', models.AutoField(help_text='Primary Key (Auto-generated for Client Manager)', primary_key=True, serialize=False)),
                ('cmm_name', models.CharField(help_text='Client Manager Name', max_length=50)),
                ('cmm_email', models.EmailField(help_text='Client Manager Email Address', max_length=254, unique=True)),
                ('cmm_phone', models.CharField(help_text='Client Manager Phone Number (e.g., +91-9988770098)', max_length=20)),
                ('cmm_location', models.CharField(help_text='Client Manager Location', max_length=50)),
                ('cmm_isactive', models.BooleanField(default=True, help_text='Is Client Manager Active Now')),
            ],
            options={
                'db_table': 'clientmanagermaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClientMaster',
            fields=[
                ('clm_id', models.AutoField(help_text='Primary Key (Auto Increment)', primary_key=True, serialize=False)),
                ('clm_clientid', models.CharField(help_text='Client unique ID (internal, manually inserted)', max_length=50, unique=True)),
                ('clm_name', models.CharField(help_text='Client Name', max_length=50)),
                ('clm_managername', models.CharField(help_text='Client Manager Name', max_length=50)),
                ('clm_clientemail', models.EmailField(help_text='Client Email Address', max_length=254, unique=True)),
                ('clm_clientphone', models.CharField(help_text='Client Phone Number (e.g., +91-9988770098)', max_length=20)),
                ('clm_address', models.TextField(help_text='Client Full Address')),
                ('clm_location', models.CharField(help_text='City of Client', max_length=50)),
                ('clm_isactive', models.BooleanField(default=True, help_text='Is Client Active Now')),
                ('clm_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record Creation Timestamp')),
                ('clm_insertby', models.IntegerField(help_text='User ID who inserted the record (from connection table)')),
                ('clm_updatedate', models.DateTimeField(auto_now=True, help_text='Last Updated Timestamp')),
                ('clm_updateby', models.IntegerField(blank=True, help_text='User ID who updated the record', null=True)),
            ],
            options={
                'db_table': 'clientmaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DemandStatusMaster',
            fields=[
                ('dsm_id', models.AutoField(help_text='Primary Key (Auto-generated for Demand Status)', primary_key=True, serialize=False)),
                ('dsm_code', models.CharField(help_text='Status Name (e.g., Open, JD Received, Rejected, etc.)', max_length=50, unique=True)),
                ('dsm_description', models.TextField(blank=True, help_text='Detailed description of the status', null=True)),
                ('dsm_sortId', models.IntegerField(help_text='Sorting order for statuses')),
                ('dsm_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record Creation Timestamp')),
                ('dsm_updatedate', models.DateTimeField(auto_now=True, help_text='Record Last Updated Timestamp')),
                ('dsm_isclosed', models.BooleanField(default=False, help_text='Indicates if the status is treated as closed')),
            ],
            options={
                'db_table': 'demandstatusmaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeMaster',
            fields=[
                ('emp_id', models.AutoField(help_text='Unique ID for contact (Auto-generated)', primary_key=True, serialize=False)),
                ('emp_uniqueid', models.CharField(help_text='Unique ID manually inserted from UI', max_length=50, unique=True)),
                ('emp_name', models.CharField(help_text='First name of the employee', max_length=50)),
                ('emp_email', models.EmailField(help_text='Email ID of the employee', max_length=254, unique=True)),
                ('emp_phone', models.CharField(help_text='Mobile or phone number (e.g., +91-9988770098)', max_length=20)),
                ('emp_location', models.CharField(help_text='Location of the employee (e.g., New York, Delhi)', max_length=50)),
                ('emp_rlm_id', models.IntegerField(help_text='Role ID associated with the employee')),
                ('emp_isactive', models.BooleanField(default=True, help_text='Indicates if the employee is active or not')),
                ('emp_keyword', models.TextField(help_text='Keywords to find specific requirements')),
                ('emp_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('emp_insertby', models.IntegerField(help_text='User ID who inserted the record (from connection table)')),
                ('emp_updatedate', models.DateTimeField(auto_now=True, help_text='Last updated timestamp')),
                ('emp_updateby', models.IntegerField(blank=True, help_text='User ID who updated the record', null=True)),
            ],
            options={
                'db_table': 'employeemaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InternalDepartmentMaster',
            fields=[
                ('idm_id', models.AutoField(help_text='Primary Key (Auto-incremented for Internal Department Master)', primary_key=True, serialize=False)),
                ('idm_unitname', models.CharField(help_text='Name of the Internal Department Name', max_length=50)),
                ('idm_unitsales', models.CharField(help_text='Sales associated with the Internal Department', max_length=50)),
                ('idm_unitdelivery', models.CharField(help_text='Delivery associated with the Internal Department', max_length=50)),
                ('idm_unitsolution', models.CharField(help_text='Solution associated with the Internal Department', max_length=50)),
                ('idm_isactive', models.BooleanField(default=True, help_text='Indicates if the Internal Department is currently active')),
                ('idm_insertdate', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the Internal Department record was created')),
                ('idm_updatedate', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the Internal Department record was last updated')),
                ('idm_deliverymanager_id', models.ForeignKey(blank=True, help_text='Delivery Manager from Employee Master', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='internaldepartment_delivery_manager', to='hiringManagementTool.employeemaster')),
                ('idm_insertby', models.ForeignKey(blank=True, help_text='Reference to the employee who inserted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='internaldepartment_inserted_records', to='hiringManagementTool.employeemaster')),
                ('idm_spoc_id', models.ForeignKey(blank=True, help_text='Single Point of Contact (SPOC) from Employee Master', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_master', to='hiringManagementTool.employeemaster')),
                ('idm_updateby', models.ForeignKey(blank=True, help_text='Reference to the employee who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='internaldepartment_updated_records', to='hiringManagementTool.employeemaster')),
            ],
            options={
                'db_table': 'internaldepartmentmaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LOBMaster',
            fields=[
                ('lob_id', models.AutoField(help_text='Primary Key (Auto-generated for LOB)', primary_key=True, serialize=False)),
                ('lob_name', models.CharField(help_text='LOB Name', max_length=50)),
                ('lob_description', models.TextField(help_text='LOB Description')),
                ('lob_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record Creation Timestamp')),
                ('lob_updatedate', models.DateTimeField(auto_now=True, help_text='Record Last Updated Timestamp')),
                ('lob_clientpartner', models.ForeignKey(blank=True, help_text='Foreign Key - Employee who is the Client Partner', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lob_client_partners', to='hiringManagementTool.employeemaster')),
                ('lob_deliverymanager', models.ForeignKey(blank=True, help_text='Foreign Key - Employee who is the Delivery Manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lob_delivery_managers', to='hiringManagementTool.employeemaster')),
                ('lob_insertby', models.ForeignKey(blank=True, help_text='User ID (Employee) who inserted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lob_inserted_records', to='hiringManagementTool.employeemaster')),
                ('lob_updateby', models.ForeignKey(blank=True, help_text='User ID (Employee) who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lob_updated_records', to='hiringManagementTool.employeemaster')),
            ],
            options={
                'db_table': 'lobmaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LocationMaster',
            fields=[
                ('lcm_id', models.AutoField(help_text='Primary Key (Auto-generated for Location Manager)', primary_key=True, serialize=False)),
                ('lcm_name', models.CharField(help_text='Location Manager Name', max_length=50)),
                ('lcm_state', models.CharField(help_text='State of the Location Manager', max_length=50)),
                ('lcm_country', models.CharField(help_text='Country of the Location Manager', max_length=50)),
                ('lcm_insertedby', models.ForeignKey(blank=True, help_text='Reference to the employee who inserted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lcm_inserted_records', to='hiringManagementTool.employeemaster')),
                ('lcm_updatedby', models.ForeignKey(blank=True, help_text='Reference to the employee who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lcm_updated_records', to='hiringManagementTool.employeemaster')),
            ],
            options={
                'db_table': 'locationmaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RoleMaster',
            fields=[
                ('rlm_id', models.IntegerField(help_text='Primary Key (Manually assigned for each role type)', primary_key=True, serialize=False)),
                ('rlm_name', models.CharField(help_text='Role Type Name (e.g., Client Partner, Delivery Manager, PU Spoc)', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'rolemaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StrategicBusinessUnitMaster',
            fields=[
                ('sbu_id', models.AutoField(help_text='Primary Key (Auto-generated for Business Unit)', primary_key=True, serialize=False)),
                ('sbu_name', models.CharField(help_text='Business Unit Name', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'strtegicbusinessunitmaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OpenDemand',
            fields=[
                ('dem_id', models.AutoField(help_text='Primary Key (Auto-generated for Demand Entry)', primary_key=True, serialize=False)),
                ('dem_ctoolnumber', models.CharField(help_text='Client Tool Number from Client', max_length=50)),
                ('dem_ctooldate', models.DateTimeField(help_text='Requirement/Demand Date from Client')),
                ('dem_validtill', models.DateTimeField(help_text='Requirement/Demand Closing Date')),
                ('dem_skillset', models.TextField(help_text='Multiple skillsets separated by commas')),
                ('dem_positions', models.IntegerField(help_text='Number of Positions Required')),
                ('dem_rrnumber', models.CharField(help_text='Request Number', max_length=50)),
                ('dem_jrnumber', models.TextField(blank=True, help_text='JR Number if External', null=True)),
                ('dem_rrgade', models.CharField(blank=True, help_text='RR Grade Entry', max_length=100, null=True)),
                ('dem_gcblevel', models.CharField(blank=True, help_text='GCB Level Entry', max_length=100, null=True)),
                ('dem_jd', models.FileField(blank=True, help_text='Job Description File Upload', null=True, upload_to='uploads/jd_files/')),
                ('dem_comment', models.TextField(blank=True, help_text='Comment Entry', null=True)),
                ('dem_isreopened', models.BooleanField(default=False, help_text='Indicates if Demand is Reopened (1 = Reopened, 0 = New)')),
                ('dem_isactive', models.BooleanField(default=True, help_text='Indicates if Demand is Active (1 = Active, 0 = Inactive)')),
                ('dem_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record Creation Timestamp')),
                ('dem_updatedate', models.DateTimeField(auto_now=True, help_text='Record Last Updated Timestamp')),
                ('dem_clm', models.ForeignKey(help_text='Reference to Client Master Table', on_delete=django.db.models.deletion.CASCADE, related_name='client_demands', to='hiringManagementTool.clientmaster')),
                ('dem_cmm', models.ForeignKey(help_text='Reference to Client Manager', on_delete=django.db.models.deletion.CASCADE, related_name='demands', to='hiringManagementTool.clientmanagermaster')),
                ('dem_dsm_id', models.ForeignKey(help_text='Reference to Sub Unit Master Table', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dsm_demands', to='hiringManagementTool.demandstatusmaster')),
                ('dem_idm_id', models.ForeignKey(help_text='Reference to Sub Unit Master Table', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idm_demands', to='hiringManagementTool.internaldepartmentmaster')),
                ('dem_insertby', models.ForeignKey(help_text='User ID (Employee) who inserted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demands_inserted', to='hiringManagementTool.employeemaster')),
                ('dem_lcm', models.ForeignKey(help_text='Reference to Location Master Table', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_demands', to='hiringManagementTool.locationmaster')),
                ('dem_lob_id', models.ForeignKey(help_text='Reference to LOB Master Table', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lob_demands', to='hiringManagementTool.lobmaster')),
                ('dem_updateby', models.ForeignKey(help_text='User ID (Employee) who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demands_updated', to='hiringManagementTool.employeemaster')),
            ],
            options={
                'db_table': 'opendemand',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='demandstatusmaster',
            name='dsm_insertedby',
            field=models.ForeignKey(help_text='User ID (Employee) who created this status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_inserted', to='hiringManagementTool.employeemaster'),
        ),
        migrations.AddField(
            model_name='demandstatusmaster',
            name='dsm_updateby',
            field=models.ForeignKey(help_text='User ID (Employee) who last updated this status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_updated', to='hiringManagementTool.employeemaster'),
        ),
        migrations.CreateModel(
            name='DemandHistoryTable',
            fields=[
                ('dhs_id', models.AutoField(help_text='Primary Key (Auto-generated for Status History)', primary_key=True, serialize=False)),
                ('dhs_dsm_code', models.CharField(help_text='Demand Status Code (from DemandStatusMaster)', max_length=50)),
                ('dhs_dsm_description', models.TextField(blank=True, help_text='Demand Status Description (from DemandStatusMaster)', null=True)),
                ('dhs_dsm_sortId', models.IntegerField(help_text='Sorting order (from DemandStatusMaster)')),
                ('dhs_dsm_insertdate', models.DateTimeField(help_text='Status insert date (from DemandStatusMaster)')),
                ('dhs_dsm_updateddate', models.DateTimeField(auto_now=True, help_text='Status last updated date & time')),
                ('dhs_dsm_isclosed', models.BooleanField(default=False, help_text='Indicates if status is treated as closed')),
                ('dhs_comments', models.TextField(blank=True, help_text='Comments regarding status change', null=True)),
                ('dhs_fromdata', models.TextField(blank=True, help_text='Old value/data before update', null=True)),
                ('dhs_todata', models.TextField(blank=True, help_text='New value/data after update', null=True)),
                ('dhs_dsm', models.ForeignKey(help_text='Reference to Demand Status Master', on_delete=django.db.models.deletion.CASCADE, related_name='demand_history', to='hiringManagementTool.demandstatusmaster')),
            ],
            options={
                'db_table': 'demandhistory',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='clientmanagermaster',
            name='cmm_clm_id',
            field=models.ForeignKey(help_text='Foreign Key from ClientMaster table', on_delete=django.db.models.deletion.CASCADE, related_name='client_managers', to='hiringManagementTool.clientmaster'),
        ),
        migrations.AddField(
            model_name='clientmanagermaster',
            name='cmm_insertedby',
            field=models.ForeignKey(blank=True, help_text='User ID (Employee) who inserted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inserted_client_managers', to='hiringManagementTool.employeemaster'),
        ),
        migrations.AddField(
            model_name='clientmanagermaster',
            name='cmm_updatedby',
            field=models.ForeignKey(blank=True, help_text='User ID (Employee) who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_client_managers', to='hiringManagementTool.employeemaster'),
        ),
        migrations.CreateModel(
            name='CandidateStatusMaster',
            fields=[
                ('csm_id', models.AutoField(help_text='Unique Candidate Status ID (Auto-generated)', primary_key=True, serialize=False)),
                ('csm_code', models.CharField(help_text='Candidate Status Name (e.g., Open, L1 Interview Scheduled, Selected, Rejected, On Hold, etc.)', max_length=50, unique=True)),
                ('csm_description', models.TextField(blank=True, help_text='Detailed description of the status', null=True)),
                ('csm_sortId', models.IntegerField(help_text='Sorting order for statuses')),
                ('csm_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record Creation Timestamp')),
                ('csm_insertedby', models.ForeignKey(blank=True, help_text='User ID (Employee) who created this status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_created', to='hiringManagementTool.employeemaster')),
            ],
            options={
                'db_table': 'candidatestatusmaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CandidateMaster',
            fields=[
                ('cdm_id', models.AutoField(help_text='Unique Candidate ID (Auto-generated)', primary_key=True, serialize=False)),
                ('cdm_empid', models.IntegerField(blank=True, help_text='Employee ID for tracking (if internal)', null=True)),
                ('cdm_name', models.CharField(help_text='Full name of the candidate', max_length=50)),
                ('cdm_email', models.EmailField(help_text='Candidate email (must be unique)', max_length=254, unique=True)),
                ('cdm_phone', models.CharField(help_text='Candidate phone number', max_length=20)),
                ('cdm_location', models.CharField(help_text='Candidate location', max_length=50)),
                ('cdm_profile', models.FileField(blank=True, help_text='Candidate profile file (resume)', null=True, upload_to='uploads/candidate_profiles/')),
                ('cdm_description', models.TextField(blank=True, help_text='Cover letter or profile description', null=True)),
                ('cdm_keywords', models.TextField(blank=True, help_text='Technical keywords associated with the candidate', null=True)),
                ('cdm_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record Creation Timestamp')),
                ('cdm_updatedate', models.DateTimeField(auto_now=True, help_text='Record Last Updated Timestamp')),
                ('cdm_isinternal', models.BooleanField(default=False, help_text='1 for internal candidate, 0 for external')),
                ('cdm_isactive', models.BooleanField(default=True, help_text='1 for active, 0 for inactive')),
                ('cdm_csm', models.ForeignKey(blank=True, help_text='Reference to another candidate (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidate_references', to='hiringManagementTool.candidatemaster')),
                ('cdm_insertby', models.ForeignKey(blank=True, help_text='User ID (Employee) who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidates_inserted', to='hiringManagementTool.employeemaster')),
                ('cdm_updatedby', models.ForeignKey(blank=True, help_text='User ID (Employee) who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidates_updated', to='hiringManagementTool.employeemaster')),
            ],
            options={
                'db_table': 'candidatemaster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CandidateDemandLink',
            fields=[
                ('cdl_id', models.AutoField(help_text='Unique Candidate Demand Link ID (Auto-generated)', primary_key=True, serialize=False)),
                ('cdl_joiningdate', models.DateField(help_text='Future Joining Date of Candidate')),
                ('cdl_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record Creation Timestamp')),
                ('cdl_cdm_id', models.ForeignKey(help_text='Reference to Candidate Master', on_delete=django.db.models.deletion.CASCADE, related_name='demand_links', to='hiringManagementTool.candidatemaster')),
                ('cdl_csm_id', models.ForeignKey(blank=True, help_text='Reference to Candidate Status Master', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linked_candidates', to='hiringManagementTool.candidatestatusmaster')),
                ('cdl_dem_id', models.ForeignKey(help_text='Reference to Demand Table', on_delete=django.db.models.deletion.CASCADE, related_name='candidate_links', to='hiringManagementTool.opendemand')),
            ],
            options={
                'db_table': 'candidatedemandlink',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CandidateDemandHistory',
            fields=[
                ('cdh_id', models.AutoField(help_text='Unique Candidate Demand History ID (Auto-generated)', primary_key=True, serialize=False)),
                ('cdh_insertdate', models.DateTimeField(auto_now_add=True, help_text='Record Creation Timestamp')),
                ('cdh_fromdata', models.TextField(blank=True, help_text='Old Value/Data before change', null=True)),
                ('cdh_todata', models.TextField(blank=True, help_text='New Value/Data after change', null=True)),
                ('cdh_cdm', models.ForeignKey(help_text='Reference to Candidate Master', on_delete=django.db.models.deletion.CASCADE, related_name='demand_history', to='hiringManagementTool.candidatemaster')),
                ('cdh_csm_id', models.ForeignKey(blank=True, help_text='Reference to Candidate Status Master', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_history', to='hiringManagementTool.candidatestatusmaster')),
                ('cdh_dem_id', models.ForeignKey(help_text='Reference to Demand Table', on_delete=django.db.models.deletion.CASCADE, related_name='candidate_demand_history', to='hiringManagementTool.opendemand')),
            ],
            options={
                'db_table': 'candidatedemandhistory',
                'managed': True,
            },
        ),
    ]
